import cv2

# Load the face and webcam images
face_image = cv2.imread('face_image.jpg')
cap = cv2.VideoCapture(0)

# Create a Haar Cascade Classifier for face detection
face_cascade=cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

while True:
    # Capture the frame from the webcam
    ret, frame = cap.read()

    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces in the grayscale frame image
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    # Loop through each detected face
    for (x,y,w,h) in faces:
        # Resize the face image to match the size of the detected face
        resized_face_image = cv2.resize(face_image, (w, h))

        # Swap the face image with the detected face in the webcam frame
        frame[y:y+h, x:x+w] = resized_face_image

    # Display the modified frame with swapped faces
    cv2.imshow('Swapped Faces', frame)

    # Press 'q' to quit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the webcam and close all windows
cap.release()
cv2.destroyAllWindows()
